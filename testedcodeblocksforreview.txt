#image_resp = openai.Image.create(prompt="two dogs playing chess, oil painting", n=4, size="512x512")
#gpt_prompt = "Say this is a test"


#label = tk.Label(window, text="Hi there! What can I do for you?")
#label.pack()

#sendbtn = tk.Button(window, text="Send", font=FONT_BOLD, bg=BG_GRAY, command=clicked).grid(row=3, column=0)
#sendbtn = tk.Button(window, text="Send", font=FONT_BOLD, bg=BG_GRAY)

#btn.pack()

#entry.pack()

"""
end-1c is divided in 2 parts:

 1) end: Read until the end of the text.
 2) 1c: Remove 1 character starting from the end.
It deletes the last character to remove that last \n so your e-mail doesn't end with an extra line.
"""


# response = openai.Completion.create(
#   model="text-davinci-003",
#   prompt="If",
#   max_tokens=100,
#   top_p=1,
#   frequency_penalty= 0.0,
#   presence_penalty= 0.0,
#   stop=["\n"]
# )
# print(response.choices[0].text)
#


# @app.route("/", methods=("GET", "POST"))
# def index():
#     if request.method == "POST":
#         animal = request.form["animal"]
#         response = openai.Completion.create(
#             model="text-davinci-003",
#             prompt=generate_prompt(animal),
#             temperature=0.6,
#         )
#         return redirect(url_for("index", result=response.choices[0].text))
#
#     result = request.args.get("result")
#     return render_template("index.html", result=result)


# Create an OpenAI API client
# openai_client = openai.Client(openai.api_key)
#
# # Create a GPT-3 engine
# engine = openai_client.engine("davinci")
#
# # Ask GPT-3 a question
# prompt = "hello, how are you doing today?"
# response = engine.engine.completions(prompt, max_tokens=2000)
#
# # Print the response
# print(response["choices"][0]["text"])

"""Suggest three names for an animal that is a superhero.
def generate_prompt(animal):
    return.format(
        animal.capitaliz
e()
    )
Animal: Cat
Names: Captain Sharpclaw, Agent Fluffball, The Incredible Feline
Animal: Dog
Names: Ruff the Protector, Wonder Canine, Sir Barks-a-Lot
Animal: {}
Names:
"""

# # list engines
# engines = openai.Engine.list()
#
# # print the first engine's id
# print(engines.data[0].id)
#app = Flask(__name__)
#openai.api_key = os.getenv("OPENAI_API_KEY")
#print(openaiapikey)